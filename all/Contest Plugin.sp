/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
new Handle:cvarEnable,points[64+1],WhoWon,Won;
new String:FragsNeeded[32];
new FragsNeededInt[32]


public Plugin:myinfo = 
{
	name = "Contest",
	author = "AviramR0X/Aviram1994",
	description = "Lets you make a frags contest which first players that gets to the amount of points you chose will choose nextmap",
	version = "1.0",
	url = "<- URL ->"
}

public OnPluginStart()
{
	cvarEnable = CreateConVar("sm_conteston","0","Lets you set contest on",FCVAR_PLUGIN, true, 0.0, true, 1.0);
	RegAdminCmd("sm_runcontest",command_runcontest,ADMFLAG_KICK,"Runs a contest");
	RegConsoleCmd("sm_conmap",command_map,"If you won the contest you can change map to what map you want")
	HookEvent("player_death",event_PlayerDeath);
	CreateConVar("sm_contest_version", "1.10", "Contest plugin's version", FCVAR_REPLICATED, true, 0.0, true, 1.0);
	Won = 0;
	WhoWon = 0;
}
public OnMapStart()
{
	Won = 0;
	WhoWon = 0;
	FragsNeededInt[0] = 0;
	SetConVarInt(cvarEnable,0,false,false);
}
public Action:command_map(client, args)
{
	if (Won == 1 && WhoWon == client)
	{
		decl String:Map[32];
		GetCmdArg(1,Map,sizeof(Map));
		ServerCommand("sm_map %s",Map);
	}
	else
	{
		PrintToChat(client,"You're unable to use this command because you didnt win the contest")
	}
}
public Action:event_PlayerDeath(Handle:event, const String:name[], bool:dontBroadcast)
{
	if (GetConVarInt(cvarEnable) == 1)
	{
		new client = GetClientOfUserId(GetEventInt(event, "userid"));
		new attacker = GetClientOfUserId(GetEventInt(event,"attacker"));
		new assister = GetClientOfUserId(GetEventInt(event, "assister"));
		if (attacker != client)
		points[attacker]++;
		if (assister != 0)
			points[assister]++;
		if (Won == 0 && WhoWon == 0)
		{
		if (points[assister] >= FragsNeededInt[0] && assister != 0 )
		{
			WhoWon = assister;
			Won = 1;
			decl String:Name[32];
			GetClientName(assister,Name,sizeof(Name));
			PrintToChatAll("%s Won the contest! He's going to choose next map :3",Name);
			PrintToChat(assister,"You can choose map by typing in chat !conmap <map>, You have 3 minutes to choose map, else someone else will be winner,You can list maps by writing in chat listmaps");
			CreateTimer(300.0,timer_NoRespond);
			
		}
		if (points[attacker] >= FragsNeededInt[0])
		{
			WhoWon = attacker;
			Won = 1;
			decl String:Name[32];
			GetClientName(attacker,Name,sizeof(Name));
			PrintToChatAll("%s Won the contest! He's going to choose next map :3",Name);
			PrintToChat(attacker,"You can choose map by typing in chat !conmap <map>, You have 5 minutes to choose map, else someone else will be winner,You can list maps by writing in chat listmaps");
			CreateTimer(300.0,timer_NoRespond);
			
		}
		PrintToChat(client,"You have %d points,You need %d points to win! Hurry up",points[client],(FragsNeededInt[0] - points[client]));
		}
	}
}
public Action:timer_NoRespond(Handle:timer) // Switches winner if player didnt choose map after 5 minutes
{
	PrintToChatAll("The winner didnt choose a map in the 5 minutes we gave him,Contest is again,First killer will be able to choose the map!");
	Won = 0;
	WhoWon = 0;
}
public OnClientPutInServer(client) // Puts 0 points on "just" connected client
{
	points[client] = 0;
}
public OnClientDisconnect(client) // If a client which won the contest leaves the server it sets that the contest wasnt done yet.
{
	if (WhoWon == client)
	{
		Won = 0
	}
}
public Action:command_runcontest(client, args) // Starts the contest
{
	decl String:Frags[32];
	GetCmdArg(1,Frags,sizeof(Frags));
	GetCmdArg(1,FragsNeeded[0],sizeof(FragsNeeded));
	FragsNeededInt[0] = StringToInt(FragsNeeded[0]);
	SetConVarInt(cvarEnable,1,false,false);
	PrintToChatAll("Contest is on, You need %s points to win it",Frags);
}

