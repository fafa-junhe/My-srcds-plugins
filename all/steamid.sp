/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <adminmenu>

public Plugin:myinfo =
{
	name = "SteamID",
	author = "Facksy",
	description = "SteamID",
	version = "1",
	url = "http://steamcommunity.com/id/iamfacksy/"
};

public OnPluginStart()
{
	RegConsoleCmd("sm_id", Cmd_id, "id");
	RegConsoleCmd("sm_steamid", Cmd_id, "id");
	RegConsoleCmd("sm_info", Cmd_id, "id");
}

public Action:Cmd_id(client, args)
{
    if(args == 0)
	{
	    ShowTheMenu(client);
		return Plugin_Handled;
	}
	else if(args >= 1)
	{
	    decl String:Target[64];
		GetCmdArg(1, Target, 64);
		
		new itarget = FindTarget(client, Target);
	    if(itarget == -1)
	    {
	    	PrintToChat(client, "[SM] Can't find target.");
	    	return Plugin_Handled;
	    }
		DoTheMenu(client, itarget);
	}
}

public Action:ShowTheMenu(client)
{
    new Handle:menu2 = CreateMenu(MenuName);
	SetMenuTitle(menu2, "Choose a player:");
	new String:temp[MAX_NAME_LENGTH], String:id[16];
	
	AddTargetsToMenu(menu2, client, true, false);
	
	SetMenuExitButton(menu2, true);
	DisplayMenu(menu2, client, MENU_TIME_FOREVER);
}
	
public MenuName(Handle:menu, MenuAction:action, param1, param2)
{
    if(action == MenuAction_End)
	{
		CloseHandle(menu);
	}	
	if(action == MenuAction_Select)
	{
	    int userid, target;
	    decl String:inform[64];
        GetMenuItem(menu, param2, inform, sizeof(inform));
		userid = StringToInt(inform);
		target = GetClientOfUserId(userid);
		
		if ((target = GetClientOfUserId(userid)) == 0)
		{
			PrintToChat(param1, "[SM] %t", "Player no longer available");
		}
		else
		{
		    DoTheMenu(param1, target);
		}
	}
}

public Action:DoTheMenu(client, itarget)
{
    if(client == client)
	{
        decl String:targetname[64];
		decl String:targetid[64];
		decl String:targetid64[64];
		
		
		decl String:ctargetname[64];
		decl String:ctargetid[64];
		decl String:ctargetprofile[64];
		decl String:ctargetadmin[64];
		
		GetClientName(itarget, targetname, 64);
		GetClientAuthId(itarget, AuthId_Engine, targetid, 64);
		GetClientAuthId(itarget, AuthId_SteamID64, targetid64, 64);
		
		if(GetUserFlagBits(itarget) & (ADMFLAG_ROOT) == (ADMFLAG_ROOT))
		{
		    Format(ctargetadmin, 64, "Status: Server Owner");
		}
		else if(GetUserFlagBits(itarget) & (ADMFLAG_SLAY) == (ADMFLAG_SLAY))
		{
		    Format(ctargetadmin, 64, "Status: Server Admin");
		}
		else
		{
		    Format(ctargetadmin, 64, "Status: Regular player");
	    }		    
		
		Format(ctargetname, 64, "Name: %s", targetname);
		Format(ctargetid, 64, "ID: %s", targetid);
		Format(ctargetprofile, 64, "http://steamcommunity.com/profiles/%s", targetid64);
		
		new Handle:menu = CreateMenu(SteamID);
	    SetMenuTitle(menu, "SteamID of %s", targetname);
		
		AddMenuItem(menu, "1", ctargetname, ITEMDRAW_DISABLED);
		AddMenuItem(menu, "2", ctargetid, ITEMDRAW_DISABLED);
		AddMenuItem(menu, "3", "--------", ITEMDRAW_DISABLED);
		AddMenuItem(menu, "4", ctargetadmin, ITEMDRAW_DISABLED);
		AddMenuItem(menu, ctargetprofile, "View Steam profile");
		if(StrEqual(targetid, "BOT"))
		{
		    RemoveMenuItem(menu, 4);
			AddMenuItem(menu, "5", "You can't see the profile of a bot", ITEMDRAW_DISABLED);
		}
		
		SetMenuExitButton(menu, true);
		DisplayMenu(menu, client, MENU_TIME_FOREVER);
	}
}

public SteamID(Handle:menu, MenuAction:action, client, param2)
{
    if(action == MenuAction_End)
	{
		CloseHandle(menu);
	}	
	if(action == MenuAction_Select)
	{
		decl String:xinfo[100];	
		GetMenuItem(menu, param2, xinfo, sizeof(xinfo));
		if(!StrEqual(xinfo, "7"))
		{
			KeyValues kv = CreateKeyValues("data");
			kv.SetString("title", "Steam Profile");
			kv.SetString("msg", xinfo);
			kv.SetNum("customsvr", 1);
			kv.SetNum("type", MOTDPANEL_TYPE_URL);
			ShowVGUIPanel(client, "info", kv, true);
			kv.Close();
	
			return Plugin_Handled;
		}

    }
	return Plugin_Handled;
}