/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdktools>
#include <tf2>

new Handle:cvarEnable;
public Plugin:myinfo = 
{
	name = "No Shotgun BBall",
	author = "Aviram Hassan/Sp0on/Aviram1994/TheJCS/trainRiderJ",
	description = "Disables shotgun on all bball maps",
	version = "1.0",
	url = "http://www.teamfortress2fort.com"
}
new Handle:g_hKeywords;
new Handle:g_hMapEnable;

public OnPluginStart()
{
	cvarEnable = CreateConVar("sm_noshotgun", "1", "Enable/Disable the plugin", FCVAR_PLUGIN, true, 0.0, true, 1.0);
	g_hMapEnable = CreateConVar("sm_bballmap", "0", "Whether the map is a bball map or not", FCVAR_PLUGIN, true, 0.0, true, 1.0);
	CreateConVar("sm_noshotgun_version", "1.0", "No BBall Shotgun Version", FCVAR_REPLICATED, true, 0.0, true, 1.0);
	g_hKeywords = CreateConVar("sm_noshotgunkeyword", "bball", "Keywords to search on the map name to active the plugin, seperated by commas", FCVAR_PLUGIN);
	HookEvent("player_spawn", event_PlayerSpawn);
	HookEvent("teamplay_round_start", Event_RoundStart);
}
public OnMapStart() {
	if(IsMapEnabled())
		SetConVarInt(g_hMapEnable,1);
	else
		SetConVarInt(g_hMapEnable,0);
}
bool:IsMapEnabled()
{
	new String:sMapName[32];
	new String:sKeywords[64];
	new String:sKeyword[16][32];
	GetCurrentMap(sMapName, 32);
	GetConVarString(g_hKeywords, sKeywords, 64);
	new iKeywords = ExplodeString(sKeywords, ",", sKeyword, 16, 32);
	for(new i = 0; i < iKeywords; i++)
	{
		if(StrContains(sMapName, sKeyword[i], false) > -1)
			return true;
	}
	return false;
}

public Action:Event_RoundStart(Handle:event, const String:name[], bool:dontBroadcast) {
	if (GetConVarBool(cvarEnable) && GetConVarBool(g_hMapEnable)) {
		new iRegenerate = -1;
		
		while ((iRegenerate = FindEntityByClassname(iRegenerate, "func_regenerate")) != -1) {
			AcceptEntityInput(iRegenerate, "Disable"); // Thanks to Tsunami for that :3 I <3 U!
		}
	}
}

public Action:event_PlayerSpawn(Handle:event, const String:name[], bool:dontBroadcast)
{
	if (!GetConVarBool(cvarEnable) || !GetConVarBool(g_hMapEnable))
		return;
	new client = GetClientOfUserId(GetEventInt(event, "userid"));
	CreateTimer(0.1, timer_DisableShotgun, client);
}

public Action:timer_DisableShotgun(Handle:timer, any:client)
{
		TF2_RemoveWeaponSlot(client, 1);
		ClientCommand(client, "slot1");
		PrintToChat(client,"Shotguns are disabled");
}

stock TF2_RemoveWeaponSlot(client, slot)
{
	new weaponIndex;
	while ((weaponIndex = GetPlayerWeaponSlot(client, slot)) != -1)
	{
		RemovePlayerItem(client, weaponIndex);
		RemoveEdict(weaponIndex);
	}
}

